---
layout: post
title:  "传输成安全!"
date:   2017-12-22 15:38:57 +0800
categories:  tls x.509 https ca rsa
catalog:    true
excerp: tcp socket
tags:
    - tls
    - x.509
    - https
    - ca
    - encryption
---
# 传输层安全

传输层安全性协议（英语：Transport Layer Security，缩写作 TLS），及其前身安全套接层（Secure Sockets Layer，缩写作 SSL）是一种安全协议，目的是为互联网通信，提供安全及数据完整性保障。网景公司（Netscape）在1994年推出首版网页浏览器，网景导航者时，推出HTTPS协议，以SSL进行加密，这是SSL的起源。IETF将SSL进行标准化，1999年公布第一版TLS标准文件。随后又公布RFC 5246 （2008年8月）与 RFC 6176 （2011年3月）。在浏览器、电子邮件、即时通信、VoIP、网络传真等应用程序中，广泛支持这个协议。主要的网站，如Google、Facebook等也以这个协议来创建安全连接，发送数据。目前已成为互联网上保密通信的工业标准。

SSL包含记录层（Record Layer）和传输层，记录层协议确定传输层数据的封装格式。传输层安全协议使用X.509认证，之后利用非对称加密演算来对通信方做身份认证，之后交换对称密钥作为会谈密钥（Session key）。这个会谈密钥是用来将通信两方交换的数据做加密，保证两个应用间通信的保密性和可靠性，使客户与服务器应用之间的通信不被攻击者窃听。

TLS协议采用主从式架构模型，其目的在于提供两个应用程序间，通过网络的一个不安全通道，创建起安全的连接，来交换数据，防止数据受到窃听及篡改。

TLS协议的优势在于它是与应用层协议独立无关的。高层的应用层协议（例如：HTTP、FTP、Telnet等等）能透明的创建于TLS协议之上。TLS协议在应用层协议通信之前就已经完成加密算法、通信密钥的协商以及服务器认证工作。在此之后应用层协议所传送的数据都会被加密，从而保证通信的私密性。

TLS协议是可选的，所以如果需要使用就必须配置客户端和服务器，有两种主要方式实现这一目标：一个是使用统一的TLS协议通信端口（例如：用于HTTPS的端口443）；另一个是客户端请求服务器连接到TLS时使用特定的协议机制（例如：邮件、新闻协议和STARTTLS）。一旦客户端和服务器都同意使用TLS协议，他们通过使用一个握手过程协商出一个有状态的连接以传输数据[1]。通过握手，客户端和服务器协商各种参数用于创建安全连接：

1. 当客户端连接到支持TLS协议的服务器要求创建安全连接并列出了受支持的密码组合（加密密码算法和加密哈希函数），握手开始。
1. 服务器从该列表中决定加密和散列函数，并通知客户端。
1. 服务器发回其数字证书，此证书通常包含服务器的名称、受信任的证书颁发机构（CA）和服务器的公钥。
1. 客户端确认其颁发的证书的有效性。
1. 为了生成会话密钥用于安全连接，客户端使用服务器的公钥加密随机生成的密钥，并将其发送到服务器，只有服务器才能使用自己的私钥解密。
1. 利用随机数，双方生成用于加密和解密的对称密钥。这就是TLS协议的握手，握手完毕后的连接是安全的，直到连接（被）关闭。如果上述任何一个步骤失败，TLS握手过程就会失败，并且断开所有的连接。

## [tsl 交互过程](www.ruanyifeng.com/blog/2014/02/ssl_tls.html)

tsl是基于传输层tcp的加密，对于传输层使用tcp的应用层协议都可以使用tsl加密，比如`https``ftp`等。

1. 客户端向服务器发clienthello请求。一般将会携带如下参数：
    - 一个随机数，`随机数一`
    - 客户端支持的加密算法和压缩算法等信息
1. 服务器收到客户端请求后，正常情况会根据客户端发送的支持加密列表中选择一个加密方式，并回复客户端如下：
    - 一个随机数，随机数二
    - 选定的加密算法，压缩算法等，（如果客户端的加密方式和服务器加密方式不一致，则要求断开连接）
    - 服务器证书,证书包含以下信息：申请者公钥、申请者的组织信息和个人信息、签发机构 CA 的信息、有效时间、证书序列号等信息的明文，同时包含一个`签名`； (非对称加密算法，比如RSA)（`签名的产生算法：首先，使用散列函数计算公开的明文信息的信息摘要，然后，采用 CA 的私钥对信息摘要进行加密，密文即签名；`）。
    - （如果服务器要求验证客户端身份，则需要向客户端发送一个验证身份请求，(ps不知道这个验证请求是携带在这个请求的参数发给客户端，还是另发起一个请求),这叫双向验证，比如银行有usb网盾，里面就携带有证书）
1. 客户端收到服务器请求之后，会验证服务器证书，如果证书验证不通过，会断开连接(`很奇怪客户端怎么验证服务器证书`),验证通过后,客户端会向服务器发送一下内容：
    - 客户端生成的随机数，随机数三，然后用服务器公钥加密这个随机数
    - 编码改变通知，表示之后的数据会用服务器和客户端协商的加密方法来通信
    - 客户端握手结束通知，同时里面会包括，前面所有数据的hash值，让服务器验证数据有没有被篡改（`既然能篡改内容，为啥不能把hash值也改了，所以对于用hash验证数据有没有被篡改表示怀疑`）
1. 服务器用三个随机数计算出session key，然后回复客户端
    - 编码改变通知
    - 服务器握手结束和前面所有数据的hash值给客户端验证。

## 疑问

1. [客户端如何验证服务器证书](https://www.jianshu.com/p/0d59d2216c64)
    - 签名的产生算法：首先，使用散列函数计算公开的明文信息的信息摘要，然后，采用 CA 的私钥对信息摘要进行加密，密文即签名。
    - 客户端通过相应ca的公钥解密证书中的签名，如果解密出来的信息和证书里面的信息一致，就表明证书有效。

1. 中间人攻击相关

## [x.509s是什么](https://zh.wikipedia.org/wiki/X.509)